<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Find Healthcare Providers Near You</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
        body {
            font-family: 'Poppins', sans-serif;
        }
        .card-hover {
            transition: all 0.3s ease;
        }
        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        .specialty-badge {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .hospital-badge {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Header Section -->
        <div class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-bold text-blue-900 mb-4">Healthcare Providers Near You</h1>
            <p class="text-lg text-gray-600 max-w-2xl mx-auto">Based on your location, we've found these doctors in your area</p>
            <div class="mt-6 flex items-center justify-center text-blue-700">
                <i class="fas fa-map-marker-alt mr-2"></i>
                <span id="userLocation" class="font-medium">Shimoga</span>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="bg-white rounded-xl shadow-md p-6 mb-8">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                <h2 class="text-xl font-semibold text-gray-800">Filter Results</h2>
                <div class="flex flex-wrap gap-4">
                    <div>
                        <label for="specialtyFilter" class="block text-sm font-medium text-gray-700 mb-1">Specialty</label>
                        <select id="specialtyFilter" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="all">All Specialties</option>
                            <option value="Cardiologist">Cardiologist</option>
                            <option value="Pediatrics">Pediatrics</option>
                            <option value="Orthopedics">Orthopedics</option>
                            <option value="Neurology">Neurology</option>
                            <option value="Dermatology">Dermatology</option>
                            <option value="General Medicine">General Medicine</option>
                        </select>
                    </div>
                    <div>
                        <label for="statusFilter" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                        <select id="statusFilter" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="all">All Status</option>
                            <option value="approved" selected>Approved</option>
                            <option value="pending">Pending</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <!-- Results Section -->
        <div class="mb-12">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Available Healthcare Providers</h2>
            
            <!-- Doctors Section -->
            <div class="mb-10">
                <h3 class="text-xl font-semibold text-blue-800 mb-4 flex items-center">
                    <i class="fas fa-user-md mr-2"></i> Doctors in Shimoga
                </h3>
                <div id="doctorsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- Doctors will be dynamically inserted here -->
                </div>
            </div>

            <!-- Hospitals Section (Hidden since you don't have hospital data) -->
            <div class="hidden">
                <h3 class="text-xl font-semibold text-purple-800 mb-4 flex items-center">
                    <i class="fas fa-hospital mr-2"></i> Hospitals
                </h3>
                <div id="hospitalsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- Hospitals will be dynamically inserted here -->
                </div>
            </div>
        </div>

        <!-- Back Button -->
        <div class="text-center mt-8">
            <a href="/patientPage" class="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition duration-200">
                <i class="fas fa-arrow-left mr-2"></i>
                Back to Patient Dashboard
            </a>
        </div>
    </div>

    <script>
        // Pass EJS data to JavaScript
        const doctors = <%- JSON.stringify(doctors) %>;
        console.log('Doctors data:', doctors);

        // Helper function to generate star rating (since it doesn't exist in your model)
        function generateStarRating(rating) {
            // Since rating doesn't exist in your model, we'll use a default or random
            const defaultRating = 4.5; // Default rating for all doctors
            let stars = '';
            const fullStars = Math.floor(defaultRating);
            const hasHalfStar = defaultRating % 1 !== 0;
            
            for (let i = 0; i < fullStars; i++) {
                stars += '<i class="fas fa-star"></i>';
            }
            
            if (hasHalfStar) {
                stars += '<i class="fas fa-star-half-alt"></i>';
            }
            
            const emptyStars = 5 - Math.ceil(defaultRating);
            for (let i = 0; i < emptyStars; i++) {
                stars += '<i class="far fa-star"></i>';
            }
            
            return stars;
        }

        // Function to get status badge color
        function getStatusBadge(status) {
            switch(status) {
                case 'approved':
                    return 'bg-green-100 text-green-800';
                case 'pending':
                    return 'bg-yellow-100 text-yellow-800';
                case 'rejected':
                    return 'bg-red-100 text-red-800';
                default:
                    return 'bg-gray-100 text-gray-800';
            }
        }

        // Function to get status text
        function getStatusText(status) {
            switch(status) {
                case 'approved':
                    return 'Verified';
                case 'pending':
                    return 'Pending Approval';
                case 'rejected':
                    return 'Not Available';
                default:
                    return status;
            }
        }

        // Function to render doctors
        function renderDoctors(doctorsToRender) {
            const container = document.getElementById('doctorsContainer');
            container.innerHTML = '';
            
            if (doctorsToRender.length === 0) {
                container.innerHTML = `
                    <div class="col-span-full text-center py-8">
                        <i class="fas fa-user-md text-4xl text-gray-300 mb-4"></i>
                        <h3 class="text-xl font-medium text-gray-700 mb-2">No doctors found</h3>
                        <p class="text-gray-500">Try adjusting your filters to see more results.</p>
                    </div>
                `;
                return;
            }
            
            doctorsToRender.forEach(doctor => {
                const card = document.createElement('div');
                card.className = 'bg-white rounded-xl shadow-md overflow-hidden card-hover';
                card.innerHTML = `
                    <div class="p-6">
                        <div class="flex items-start justify-between mb-4">
                            <div>
                                <h3 class="text-xl font-bold text-gray-800">${doctor.name}</h3>
                                <span class="inline-block mt-1 px-3 py-1 text-xs font-semibold text-white specialty-badge rounded-full">${doctor.specialization}</span>
                            </div>
                            <div class="flex items-center ${getStatusBadge(doctor.status)} px-2 py-1 rounded-full text-sm">
                                <i class="fas ${doctor.status === 'approved' ? 'fa-check-circle' : doctor.status === 'pending' ? 'fa-clock' : 'fa-times-circle'} mr-1"></i>
                                <span>${getStatusText(doctor.status)}</span>
                            </div>
                        </div>
                        
                        <div class="flex items-center mb-4">
                            <div class="flex text-yellow-400 mr-2">
                                ${generateStarRating()}
                            </div>
                            <span class="text-gray-600 text-sm">4.5 (Default rating)</span>
                        </div>
                        
                        <div class="space-y-2 mb-4">
                            <div class="flex items-center text-gray-600">
                                <i class="fas fa-map-marker-alt mr-2 w-5"></i>
                                <span>${doctor.location}</span>
                            </div>
                            <div class="flex items-center text-gray-600">
                                <i class="fas fa-phone mr-2 w-5"></i>
                                <span>${doctor.phone}</span>
                            </div>
                            <div class="flex items-center text-gray-600">
                                <i class="fas fa-envelope mr-2 w-5"></i>
                                <span class="truncate">${doctor.email}</span>
                            </div>
                            <div class="flex items-center text-gray-600">
                                <i class="fas fa-venus-mars mr-2 w-5"></i>
                                <span>${doctor.gender}</span>
                            </div>
                        </div>
                        
                        <div class="flex items-center justify-between mt-6">
                            ${doctor.status === 'approved' ? 
                                `<button class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition duration-200 flex items-center">
                                    <i class="fas fa-calendar-check mr-2"></i>
                                    Book Appointment
                                </button>` :
                                `<button class="px-4 py-2 bg-gray-400 text-white font-medium rounded-lg flex items-center cursor-not-allowed" disabled>
                                    <i class="fas fa-clock mr-2"></i>
                                    Not Available
                                </button>`
                            }
                        </div>
                    </div>
                `;
                container.appendChild(card);
            });
        }

        // Filter functionality
        function applyFilters() {
            const specialtyFilter = document.getElementById('specialtyFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;
            
            let filteredDoctors = doctors;
            
            // Apply specialty filter
            if (specialtyFilter !== 'all') {
                filteredDoctors = filteredDoctors.filter(doctor => 
                    doctor.specialization === specialtyFilter
                );
            }
            
            // Apply status filter
            if (statusFilter !== 'all') {
                filteredDoctors = filteredDoctors.filter(doctor => 
                    doctor.status === statusFilter
                );
            }
            
            renderDoctors(filteredDoctors);
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            renderDoctors(doctors);
            
            // Add event listeners to filters
            document.getElementById('specialtyFilter').addEventListener('change', applyFilters);
            document.getElementById('statusFilter').addEventListener('change', applyFilters);
        });
    </script>
</body>
</html>